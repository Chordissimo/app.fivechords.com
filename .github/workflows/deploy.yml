name: fivechords

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - 'staging'
      - 'main'

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

jobs:  
  Deploy:
    name: "Deploying services"
    if: startsWith(github.event.pull_request.title, '[r]') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      NGINX: ${{ contains(github.event.pull_request.title, '[nginx]') &&  'nginx' || '' }}
      APP: ${{ contains(github.event.pull_request.title, '[app]') &&  'app' || '' }}
      MONGO: ${{ contains(github.event.pull_request.title, '[mongo]') &&  'mongo' || '' }}
      NAMESPACE: ${{ github.ref == 'refs/heads/staging' && 'stage.fivechords.com' || 'app.fivechords.com' }}
      USER: "ci_user" 
      SSH_KEY: ${{ github.ref == 'refs/heads/staging' && secrets.STAGING_USER_KEY || secrets.PRODUCTION_USER_KEY }}
      SERVER: ${{ github.ref == 'refs/heads/staging' && '209.51.170.206' || '209.51.170.206' }}
      TAGERT_DIR: ${{ github.ref == 'refs/heads/staging' && 'src_stage' || 'src' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: sync&build
        run: |-
          echo "$SSH_KEY" | tr -d '\r' > ssh_key
          chmod 0600 ssh_key
          rsync -a -e "ssh -o StrictHostKeyChecking=no -i ssh_key" ./src $USER@$SERVER:/home/$USER
          ssh -o StrictHostKeyChecking=no -i ssh_key $USER@$SERVER "cd /home/$USER/$TAGERT_DIR; sudo DOMAIN=$NAMESPACE SRV="$NGINX,$APP,$MONGO" bash scripts/build_docker.sh"
          
  DeployChords:
    name: "Updating chords JSON"
    if: startsWith(github.event.pull_request.title, '[chords]') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      NAMESPACE: ${{ github.ref == 'refs/heads/staging' && 'get_st' || 'get' }}
      SERVER: ${{ github.ref == 'refs/heads/staging' && '209.51.170.206' || '184.105.181.159' }}
      USER: "ci_user" 
      SSH_KEY: ${{ github.ref == 'refs/heads/staging' && secrets.STAGING_USER_KEY || secrets.PRODUCTION_USER_KEY }}
      TAGERT_DIR: ${{ github.ref == 'refs/heads/staging' && 'src_stage' || 'src' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: sync&build
        run: |-
          echo "$SSH_KEY" | tr -d '\r' > ssh_key
          chmod 0600 ssh_key
          rsync -a -e "ssh -o StrictHostKeyChecking=no -i ssh_key" ./config/chords $USER@$SERVER:$TAGERT_DIR/config
